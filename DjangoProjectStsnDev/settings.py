"""
Django settings for DjangoProjectStsnDev project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

from django.templatetags.static import static
from django.utils.translation import gettext_lazy as _

from DjangoProjectStsnDev import middleware

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-qw8agq#nes-i4+8iz7tn&x00=8z+ymg+^dbi(7oqqv(dve92h-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
IS_LOCAL = False if BASE_DIR.parent.name == 'django_projects' else True

ALLOWED_HOSTS = ['127.0.0.1', 'stsn-dev.kyiv.ua', '185.237.207.91']

# CSRF_TRUSTED_ORIGINS = [
#     'https://djangoprojectstsndev.onrender.com'
# ]

# Application definition

INSTALLED_APPS = [
    "unfold",  # before django.contrib.admin
    "unfold.contrib.filters",  # optional, if special filters are needed
    "unfold.contrib.forms",  # optional, if special form elements are needed
    "unfold.contrib.inlines",  # optional, if special inlines are needed
    "unfold.contrib.import_export",  # optional, if django-import-export package is used
    "unfold.contrib.guardian",  # optional, if django-guardian package is used
    "unfold.contrib.simple_history",  # optional, if django-simple-history package is used
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django.contrib.postgres',
    'orders.apps.OrdersConfig',
    'home.apps.HomeConfig',
    'accounts.apps.AccountsConfig',
    'extensions.apps.ExtensionsConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    # 'DjangoProjectStsnDev.middleware.CustomLocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

]

ROOT_URLCONF = 'DjangoProjectStsnDev.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoProjectStsnDev.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'h68663c_stsn_db',
        'USER': 'h68663c_stsn',
        'PASSWORD': 'M3Ch6a94Ph',
        'HOST': '127.0.0.1' if IS_LOCAL else '',  # подключение через Unix-сокеты
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'accounts.CustomUser'

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Europe/Kyiv'
USE_I18N = True
USE_L10N = True
USE_TZ = True

LANGUAGES = [
    ("ru", _("Russian")),
    # ("ua", _("Ukrainian")),
    ("uk", _("Ukrainian")),
    ("en", _("English")),
]

LOCALE_PATHS = [
    os.path.join(BASE_DIR, 'orders', 'locale'),
    os.path.join(BASE_DIR, 'locale/settings'),
]


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

# STATIC_URL = 'stsn_dev/static/'
# STATIC_ROOT = '/home/h68663c/public_html/stsn_dev/static'
STATIC_URL = '/DjangoProjectStsnDev/static/'
STATIC_ROOT = '/var/www/html/DjangoProjectStsnDev/static'
STATICFILES_DIRS = [BASE_DIR / "static"]

MEDIA_URL = '/media/'
# MEDIA_ROOT = '/home/h68663c/public_html/stsn_dev/media'
MEDIA_ROOT = '/var/www/html/DjangoProjectStsnDev/media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Настройка Celery для использования SQLAlchemy pip install sqlalchemy
CELERY_BROKER_URL = 'sqla+sqlite:///celerydb.sqlite'
CELERY_RESULT_BACKEND = 'db+sqlite:///celerydb.sqlite'


EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'mail.stsn-dev.kyiv.ua'
EMAIL_PORT = 587  # Порт SMTP-сервера
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'support@stsn-dev.kyiv.ua'
DEFAULT_FROM_EMAIL = 'support@stsn-dev.kyiv.ua'
EMAIL_HOST_PASSWORD = 'cJqnv}p8FkG,'

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
}

LOGIN_REDIRECT_URL = '/'
# LOGIN_URL = '/'

if not IS_LOCAL:
    import sys

    # Настройка логирования: перенаправление ошибок только в stderr
    LOGGING = {
        'version': 1,
        'handlers': {
            'stdout': {
                'level': 'INFO',
                'class': 'logging.StreamHandler',
                'stream': sys.stdout,  # Для обычных сообщений
            },
            'stderr': {
                'level': 'ERROR',
                'class': 'logging.StreamHandler',
                'stream': sys.stderr,  # Для ошибок
            },
        },
        'loggers': {
            'django': {
                'handlers': ['stdout', 'stderr'],
                'level': 'DEBUG',
            },
        },
    }

PRIVATE_KEY = "11112222333442"

UNFOLD = {
    "SHOW_LANGUAGES": True,
    'SITE_HEADER': 'Администрирование',
    'SITE_TITLE': 'Stsn Dev',
    "STYLES": [
            lambda request: static("admin/css/unfold.css"),
        ],
    "SITE_ICON": {
        "light": lambda request: static("admin/stsn-icon.svg"),  # light mode
        "dark": lambda request: static("admin/stsn-icon.svg"),  # dark mode
    },
}
